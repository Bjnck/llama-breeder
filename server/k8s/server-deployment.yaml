apiVersion: v1
kind: ConfigMap
metadata:
  name: llama-breeder-configmap
data:
  serverPort: "8081"
  databaseUrl: mysql-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-breeder
  labels:
    app: llama-breeder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama-breeder
  template:
    metadata:
      labels:
        app: llama-breeder
    spec:
      containers:
        - name: llama-breeder-server
          image: "europe-west1-docker.pkg.dev/llamabreeder/server/llama-breeder:latest"
          ports:
            - containerPort: 8081
          livenessProbe:
            httpGet:
              path: "/health-check"
              port: 8081
            initialDelaySeconds: 45
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: "/health-check"
              port: 8081
            initialDelaySeconds: 45
            timeoutSeconds: 5
          env:
            - name: SERVER_PORT
              valueFrom:
                configMapKeyRef:
                  name: llama-breeder-configmap
                  key: serverPort
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: llama-breeder-secret
                  key: mysqlUsername
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: llama-breeder-secret
                  key: mysqlPassword
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: llama-breeder-configmap
                  key: databaseUrl
            - name: FIREBASE_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: llama-breeder-secret
                  key: firebaseConfig
---
apiVersion: v1
kind: Service
metadata:
  name: llama-breeder-service
  annotations:
    networking.gke.io/load-balancer-type: "Internal"
spec:
  selector:
    app: llama-breeder
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30000
